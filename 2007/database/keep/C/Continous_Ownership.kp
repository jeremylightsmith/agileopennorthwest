³1version³21³2ts³21170284665³2ip³267.132.134.6³2name³2text_default³2data³2summary³3*³3text³3Continous Ownership - Exploring issues and location of ownership in agile development and beyond.
hosted by:  Marty Nelson

Brainstorming

- expectation of "mature agile"
- owners within teams continously
- all team members sharing ownership
- features/stories morphing based on team consensus
- ui designers going from detailed implemntation to move freedom in design
- agile encourages/forces feature vs requirement vs detailed spec

Communication between "owners" and "developers"

- you want developers who won't implement things that aren't right.
- being developers who get the "right code right" means values is higher.
- developers don't want backlog with fixed, detailed, requirements - rather features that they can figure out how to implement.
- maybe product owner (PO) continously available to team is answer?
- what about whether the authority (PO) vs. responsiblity (teh team)
- PO is either a oig or chicken ...  do they contribute work or not.
³3newauthor³31³3minor³30³2host³267.132.134.6³2username³2³2revision³21³2id³2111³2tscreate³21170284665³2keepts³21170286099³1ip³267.132.134.6³2ts³21170286099³2version³21³2name³2text_default³2data³2summary³3*³3text³3Continous Ownership - Exploring issues and location of ownership in agile development and beyond.
hosted by:  Marty Nelson

Brainstorming

- expectation of "mature agile"
- owners within teams continously
- all team members sharing ownership
- features/stories morphing based on team consensus
- ui designers going from detailed implemntation to move freedom in design
- agile encourages/forces feature vs requirement vs detailed spec

Communication between "owners" and "developers"

- you want developers who won't implement things that aren't right.
- being developers who get the "right code right" means values is higher.
- developers don't want backlog with fixed, detailed, requirements - rather features that they can figure out how to implement.
- maybe product owner (PO) continously available to team is answer?
- what about whether the authority (PO) vs. responsiblity (teh team)
- PO is either a oig or chicken ...  do they contribute work or not.

Fixed iteration goals forces PO to commit to goals, insulates developers from responsibility for bad business ideas.

Quality improved by PO w/ tech and business skills.


Skills vs Personality

Process Knowledge

People with technical + business are ideal, but hard to find.



Multiple interests represented in ownership (PO + Dev + tester + UI + depolyment + sales & mkt + training /doc )

UNITY, not uniformity

everything at once

--

idea:

team pulls stories from backlog as team deems fit to reach larger goal (priority resides in team)

--

PO needs ti act as part of team to form larger team

Favor concensus, but PO must ultimately decide.

--

Overhead in large scrum projects (scrum of scrums in multiple layers)
PO fuzziness, must converse to resolve.

--

What do we want ownership of?


   * Ownership of those things we control or affect

   * Ownership of those things for which we have the skills and compotence.

Yet, the edge of these things are what is most exciting.  
The boundaries of our control and skills brings the greatest interest

--

Ownership Orphans - unclaimed ownership.

PO's lack of bandwidth to be the PO can be limit.

Personal relationship with PO may elicit ownership when combined with:
   ASKING for them to own it


³3minor³30³3newauthor³30³2username³2³2host³267.132.134.6³2revision³22³2tscreate³21170284665³2id³2111³2keepts³21170286118³1version³21³2ts³21170286118³2ip³267.132.134.6³2name³2text_default³2data³2summary³3*³3text³3Continous Ownership - Exploring issues and location of ownership in agile development and beyond.

hosted by:  Marty Nelson

Brainstorming

- expectation of "mature agile"
- owners within teams continously
- all team members sharing ownership
- features/stories morphing based on team consensus
- ui designers going from detailed implemntation to move freedom in design
- agile encourages/forces feature vs requirement vs detailed spec

Communication between "owners" and "developers"

- you want developers who won't implement things that aren't right.
- being developers who get the "right code right" means values is higher.
- developers don't want backlog with fixed, detailed, requirements - rather features that they can figure out how to implement.
- maybe product owner (PO) continously available to team is answer?
- what about whether the authority (PO) vs. responsiblity (teh team)
- PO is either a oig or chicken ...  do they contribute work or not.

Fixed iteration goals forces PO to commit to goals, insulates developers from responsibility for bad business ideas.

Quality improved by PO w/ tech and business skills.


Skills vs Personality

Process Knowledge

People with technical + business are ideal, but hard to find.



Multiple interests represented in ownership (PO + Dev + tester + UI + depolyment + sales & mkt + training /doc )

UNITY, not uniformity

everything at once

--

idea:

team pulls stories from backlog as team deems fit to reach larger goal (priority resides in team)

--

PO needs ti act as part of team to form larger team

Favor concensus, but PO must ultimately decide.

--

Overhead in large scrum projects (scrum of scrums in multiple layers)
PO fuzziness, must converse to resolve.

--

What do we want ownership of?


   * Ownership of those things we control or affect

   * Ownership of those things for which we have the skills and compotence.

Yet, the edge of these things are what is most exciting.  
The boundaries of our control and skills brings the greatest interest

--

Ownership Orphans - unclaimed ownership.

PO's lack of bandwidth to be the PO can be limit.

Personal relationship with PO may elicit ownership when combined with:
   ASKING for them to own it


³3newauthor³30³3minor³30³2host³267.132.134.6³2username³2³2revision³23³2id³2111³2tscreate³21170284665³2keepts³21170370829